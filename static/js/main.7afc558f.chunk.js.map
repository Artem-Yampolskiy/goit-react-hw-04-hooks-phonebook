{"version":3,"sources":["Components/Form/Form.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/Container/Container.js","Components/Form/Form.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","styles","container","Form","onSubmit","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","reset","form","preventDefault","label","input","type","pattern","title","onChange","required","btn","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","Filter","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","v4","find","toLowerCase","alert","prevContacts","normalizedFilter","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7afc558f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1l_zj\",\"label\":\"Form_label__3HkPl\",\"input\":\"Form_input__30367\",\"btn\":\"Form_btn__JZTlZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__25V30\",\"item\":\"ContactList_item__14JWu\",\"btn\":\"ContactList_btn__245Kb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2Fx4K\",\"input\":\"Filter_input__3hUPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3awDa\"};","import PropTypes from 'prop-types';\n\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\r\nimport styles from './Form.module.css';\r\n\r\nfunction Form({ onSubmit}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        };\r\n    };\r\n    \r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const options = { name, number };\r\n        onSubmit(options);\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n            setName('');\r\n            setNumber('');\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className={styles.form}\r\n            onSubmit={handleSubmit}>\r\n            <label className={styles.label}>Name\r\n                <input\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    onChange={handleInputChange} value={name}\r\n                    required\r\n                />\r\n            </label>\r\n            <label className={styles.label}>Number\r\n                <input\r\n                    className={styles.input}\r\n                    onChange={handleInputChange}\r\n                    value={number}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n            </label>\r\n            <button\r\n                className={styles.btn}\r\n                type=\"submit\">\r\n                Add contact\r\n            </button>\r\n        </form>\r\n        );\r\n    };        \r\n\r\n\r\nexport default Form;","import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.item} name={name} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            className={styles.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label\r\n        className={styles.label}>\r\n        Find contact by  name\r\n        <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import { useState, useEffect } from 'react';\n\nimport { v4 } from 'uuid';\n\nimport Container from './Components/Container/Container'\nimport Form from './Components/Form/Form';\nimport ContactList from './Components/ContactList/ContactList'\nimport Filter from './Components/Filter/Filter';\n\n\nfunction App() {\n  \n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) ?? []\n  });\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);  \n\n  const onChangeFind = event => {\n    setFilter( event.currentTarget.value )\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts => [\n      ...prevContacts.filter(contact => contact.id !== contactId),\n    ]);\n  };\n\n  const formSubmitHandler = ({ name, number }) => {\n    const contact = {\n      id: v4(),\n      name,\n      number,\n    };\n    \n    if (\n      contacts.find(({ name }) =>\n        name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      setContacts(prevContacts => [contact, ...prevContacts]);\n    }\n  };\n  \n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({name}) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  }; \n    \n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form onSubmit={formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={onChangeFind} />\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    );\n  };\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}